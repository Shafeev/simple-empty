package org.mcs.tasks.dfsBfs;

/**
 * Учитывая двумерную бинарную сетку m x n, которая представляет собой карту из "1" (суша) и "0" (вода),
 * верните количество островов.
 * <p>
 * Остров окружен водой и образуется путем соединения соседних земель по горизонтали или вертикали.
 * Вы можете предположить, что все четыре края сетки окружены водой.
 * <p>
 * Input: grid = [
 * ["1","1","1","1","0"],
 * ["1","1","0","1","0"],
 * ["1","1","0","0","0"],
 * ["0","0","0","0","0"]
 * ]
 * Output: 1
 * <p>
 * Input: grid = [
 * ["1","1","0","0","0"],
 * ["1","1","0","0","0"],
 * ["0","0","1","0","0"],
 * ["0","0","0","1","1"]
 * ]
 * Output: 3
 */
public class NumberOfIslands {

    public static void main(String[] args) {
        char[][] grid = {
                {'1', '1', '1', '1', '0'},
                {'1', '1', '0', '1', '0'},
                {'1', '1', '0', '0', '0'},
                {'0', '0', '0', '0', '0'}
        };

        int result = numIslands(grid);
        System.out.println(result);
    }

    private static int numIslands(char[][] grid) {
        int result = 0;



        return -1;
    }
}
